type Evaluation {
  id: ID!
  name: String!
  weight: Float!
  subject: Subject!
  evaluationResults : [EvaluationResult!]!
}

input EvaluationCreationInput {
  subjectId: ID!
  name: String!
  weight: Float!
  resultInputs: [CreateEvaluationResultInput]
}

input EvaluationEditInput {
  evaluationId: ID!
  name: String!
  weight: Float!
}

extend type Query {
  findEvaluation (id: ID!) : Evaluation
}

extend type Mutation {
  createEvaluation (input: EvaluationCreationInput!) : Evaluation!
  editEvaluation (input: EvaluationEditInput!) : Evaluation!
}