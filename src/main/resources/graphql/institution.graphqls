type Institution {
  id: ID!
  name: String!
  email: String!
  phone: String!
  address: String!
  grades: [ Grade! ]!
  adminList : [User] !
  teacherList : [User] !
  studentList : [User] !
}

input CreateInstitutionInput {
  name: String!
  email: String!
  phone: String!
  address: String!
}

input GetUsersFromInstitutionByRoleInput {
  institutionId: ID!
  role: UserRole!
}

input RemoveUserFromInstitutionInput {
  institutionId: ID!
  toBeRemovedId: ID!
  institutionName: String
  password: String
  
}

extend type Query {
    findInstitution(id: ID!): Institution
    getInstitutionsFromLoggedUser: [Institution!]
    getAllUsersFromInstitution(id: ID!) : [User]!
    getUsersFromInstitutionByRole(input: GetUsersFromInstitutionByRoleInput!) : [User]!
}

extend type Mutation {
    createInstitution(input: CreateInstitutionInput!): Institution
    removeUserFromInstitution(input: RemoveUserFromInstitutionInput!) : Boolean
}